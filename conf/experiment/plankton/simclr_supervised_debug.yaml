# @package _global_

defaults:
  - /callbacks/gpu_monitoring: gpu_monitoring
  - override /strategy: null
  - override /datamodule: plankton
  - override /datamodule/dataset: default
  - override /loss: nll_loss
  - override /datamodule/train_transforms: simclr_plankton
  - override /datamodule/valid_transforms: plankton_eval
  - override /model/feature_extractor: simclr_resnet
  - override /model/classifier: linear
  - override /trainer: default
  - override /hydra/launcher: local
  - override /optimizer: adam

  - _self_

debug: false
load_state_dict: null
scheduler: "cosine"
log_level: "DEBUG"

trainer:
  fast_dev_run: false
  num_sanity_val_steps: 5
  max_epochs: 5
  limit_train_batches: 5
  limit_val_batches: 5
  min_epochs: 4
  gpus: 1
  precision: 32
  sync_batchnorm: true
  profiler: "simple"

logger:
  tensorboard:
    default_hp_metric: false

datamodule:
  num_workers: 0
  batch_size: 5 # batch size per GPU
  oversample_data: true
  pin_memory: false
  reduce_data: true # use max 10.000 images from each class
  use_klas_data: true
  use_canadian_data: false
  use_planktonnet_data: false
  preload_dataset: false
  subsample_supervised: 0.05

lightning_module:
  log_confusion_matrices: false
  log_images: false
  freeze_feature_extractor: false
  temperature_scale: false

model:
  classifier:
    num_classes: null # size of the projection head
    input_features: 128
  feature_extractor:
    model:
      _target_: "torchvision.models.resnet18"
      num_classes: ${model.classifier.input_features}
      pretrained: false
      # first conv layer:
    kernel_size: 7 # default is 7
    stride: 2 # default is 2
    channels: 3 # default is 3
    maxpool1: true

optimizer:
  lr: 0.02

callbacks:
  early_stopping:
    monitor: "loss/Validation"
    patience: 800
    verbose: true
    mode: "min"
